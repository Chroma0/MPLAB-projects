

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                                           Thu Oct 19 09:49:31 2023


     1                           	processor	18F4520
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    12                           	psect	code,global,reloc=2,class=CODE,delta=1
    13                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    14                           	psect	edata,global,class=EEDATA,space=3,delta=1,noexec
    15                           	psect	mytext,local,reloc=2,class=CODE,delta=1
    16   000000                     
    17                           	psect	edata
    18   000000                     stk_offset	set	0
    19   000000                     auto_size	set	0
    20                           
    21                           ; stack_auto defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the auto object in question
    23   000000                     
    24                           ; stack_param defines a symbol /name/_offset which equates to the
    25                           ; stack offset of the parameter object in question
    26   000000                     
    27                           ; alloc_stack adjusts the SP to allocate space for auto objects
    28                           ; it also links in to the btemp symbol so that can be used
    29   000000                     
    30                           ; restore_stack adjusts the SP to remove all auto and parameter
    31                           ; objects from the stack prior to returning from a function
    32   000000                     
    33                           	psect	mytext
    34   000602                     _lcm:
    35                           	callstack 0
    36   000602  C001 FF89          	movff	1,3977	; LATA = a
    37   000606  C003 FF8A          	movff	3,3978	; LATB = b
    38   00060A  C001 FFE8          	movff	1,wreg
    39   00060E  6003               	cpfslt	3,c
    40   000610  D001               	goto	gcd_1
    41   000612  D00A               	goto	gcd_2
    42   000614                     gcd_1:
    43   000614  C001 FFE8          	movff	1,wreg
    44   000618  5E03               	subwf	3,f,c
    45   00061A  6003               	cpfslt	3,c
    46   00061C  D7FB               	goto	gcd_1
    47   00061E  6603               	tstfsz	3,c
    48   000620  D003               	goto	gcd_2
    49   000622  C001 FF8B          	movff	1,3979	; LATC = gcd(a,b)
    50   000626  D009               	goto	relay
    51   000628                     gcd_2:
    52   000628  C003 FFE8          	movff	3,wreg
    53   00062C  5E01               	subwf	1,f,c
    54   00062E  6001               	cpfslt	1,c
    55   000630  D7FB               	goto	gcd_2
    56   000632  6601               	tstfsz	1,c
    57   000634  D7EF               	goto	gcd_1
    58   000636  C003 FF8B          	movff	3,3979	; LATC = gcd(a,b)
    59   00063A                     relay:
    60   00063A  0E00               	movlw	0
    61   00063C  6E01               	movwf	1,c
    62   00063E  6E02               	movwf	2,c
    63   000640  0EFF               	movlw	255
    64   000642  6E94               	movwf	3988,c
    65   000644  CF89 FFE8          	movff	3977,wreg
    66   000648  028A               	mulwf	3978,c	; a*b
    67   00064A  CFF4 FF92          	movff	prodh,3986
    68   00064E  CFF3 FF93          	movff	prodl,3987
    69   000652  D007               	goto	division_loop_high
    70   000654                     minus_high:
    71   000654  0692               	decf	3986,f,c
    72   000656  CF8B FFE8          	movff	3979,wreg
    73   00065A  5C94               	subwf	3988,w,c
    74   00065C  2693               	addwf	3987,f,c
    75   00065E  2A93               	incf	3987,f,c
    76   000660  D008               	goto	L1
    77   000662                     division_loop_high:
    78   000662  CF8B FFE8          	movff	3979,wreg
    79   000666  6093               	cpfslt	3987,c
    80   000668  D003               	goto	division_loop_low
    81   00066A  6692               	tstfsz	3986,c
    82   00066C  D7F3               	goto	minus_high
    83   00066E  0012               	return	
    84   000670                     division_loop_low:
    85   000670  5E93               	subwf	3987,f,c
    86   000672                     L1:
    87   000672  0EFF               	movlw	255
    88   000674  6001               	cpfslt	1,c
    89   000676  D004               	goto	add_num_2
    90   000678  CF8B FFE8          	movff	3979,wreg
    91   00067C  2A01               	incf	1,f,c
    92   00067E  D005               	goto	L2
    93   000680                     add_num_2:
    94   000680  2A02               	incf	2,f,c
    95   000682  0E00               	movlw	0
    96   000684  6E01               	movwf	1,c
    97   000686  CF8B FFE8          	movff	3979,wreg
    98   00068A                     L2:
    99   00068A  6093               	cpfslt	3987,c
   100   00068C  D7F1               	goto	division_loop_low
   101   00068E  D7E9               	goto	division_loop_high
   102                           tosu	equ	0xFFF
   103                           tosh	equ	0xFFE
   104                           tosl	equ	0xFFD
   105                           stkptr	equ	0xFFC
   106                           pclatu	equ	0xFFB
   107                           pclath	equ	0xFFA
   108                           pcl	equ	0xFF9
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           prodh	equ	0xFF4
   114                           prodl	equ	0xFF3
   115                           indf0	equ	0xFEF
   116                           postinc0	equ	0xFEE
   117                           postdec0	equ	0xFED
   118                           preinc0	equ	0xFEC
   119                           plusw0	equ	0xFEB
   120                           fsr0h	equ	0xFEA
   121                           fsr0l	equ	0xFE9
   122                           wreg	equ	0xFE8
   123                           indf1	equ	0xFE7
   124                           postinc1	equ	0xFE6
   125                           postdec1	equ	0xFE5
   126                           preinc1	equ	0xFE4
   127                           plusw1	equ	0xFE3
   128                           fsr1h	equ	0xFE2
   129                           fsr1l	equ	0xFE1
   130                           bsr	equ	0xFE0
   131                           indf2	equ	0xFDF
   132                           postinc2	equ	0xFDE
   133                           postdec2	equ	0xFDD
   134                           preinc2	equ	0xFDC
   135                           plusw2	equ	0xFDB
   136                           fsr2h	equ	0xFDA
   137                           fsr2l	equ	0xFD9
   138                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                               Thu Oct 19 09:49:31 2023

                        LATA 0F89                          LATB 0F8A                          LATC 0F8B  
                        WREG 0FE8                          _lcm 0602                         PRODH 0FF4  
                       PRODL 0FF3                         TRISA 0F92                         TRISB 0F93  
                       TRISC 0F94                         gcd_1 0614                         gcd_2 0628  
                       relay 063A                       isa$std 0001             division_loop_low 0670  
          division_loop_high 0662                     add_num_2 0680                    minus_high 0654  
                   isa$xinst 0000  
