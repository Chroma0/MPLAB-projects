

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                                           Thu Oct 19 08:56:25 2023


     1                           	processor	18F4520
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    12                           	psect	code,global,reloc=2,class=CODE,delta=1
    13                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    14                           	psect	edata,global,class=EEDATA,space=3,delta=1,noexec
    15                           	psect	mytext,local,reloc=2,class=CODE,delta=1
    16   000000                     
    17                           	psect	edata
    18   000000                     stk_offset	set	0
    19   000000                     auto_size	set	0
    20                           
    21                           ; stack_auto defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the auto object in question
    23   000000                     
    24                           ; stack_param defines a symbol /name/_offset which equates to the
    25                           ; stack offset of the parameter object in question
    26   000000                     
    27                           ; alloc_stack adjusts the SP to allocate space for auto objects
    28                           ; it also links in to the btemp symbol so that can be used
    29   000000                     
    30                           ; restore_stack adjusts the SP to remove all auto and parameter
    31                           ; objects from the stack prior to returning from a function
    32   000000                     
    33                           	psect	mytext
    34   000602                     _is_square:
    35                           	callstack 0
    36   000602  0E01               	movlw	1
    37   000604  6E8A               	movwf	3978,c	; LATB = 1
    38   000606  0E00               	movlw	0
    39   000608  6E89               	movwf	3977,c	; LATA = i
    40   00060A                     Check:
    41   00060A  2A89               	incf	3977,f,c	; i++
    42   00060C  CF89 FFE8          	movff	3977,wreg
    43   000610  0289               	mulwf	3977,c	; i*i
    44   000612  CF8A FFE8          	movff	3978,wreg
    45   000616  60F4               	cpfslt	prodh,c	; check if 16*16
    46   000618  D007               	goto	false
    47   00061A  CFF3 FFE8          	movff	prodl,wreg
    48   00061E  6201               	cpfseq	1,c	; check if i*i == [0x01]
    49   000620  D7F4               	goto	Check
    50   000622  0E01               	movlw	1
    51   000624  6E01               	movwf	1,c
    52   000626  0012               	return	
    53   000628                     false:
    54   000628  0EFF               	movlw	255
    55   00062A  6E01               	movwf	1,c
    56   00062C  0012               	return	
    57                           tosu	equ	0xFFF
    58                           tosh	equ	0xFFE
    59                           tosl	equ	0xFFD
    60                           stkptr	equ	0xFFC
    61                           pclatu	equ	0xFFB
    62                           pclath	equ	0xFFA
    63                           pcl	equ	0xFF9
    64                           tblptru	equ	0xFF8
    65                           tblptrh	equ	0xFF7
    66                           tblptrl	equ	0xFF6
    67                           tablat	equ	0xFF5
    68                           prodh	equ	0xFF4
    69                           prodl	equ	0xFF3
    70                           indf0	equ	0xFEF
    71                           postinc0	equ	0xFEE
    72                           postdec0	equ	0xFED
    73                           preinc0	equ	0xFEC
    74                           plusw0	equ	0xFEB
    75                           fsr0h	equ	0xFEA
    76                           fsr0l	equ	0xFE9
    77                           wreg	equ	0xFE8
    78                           indf1	equ	0xFE7
    79                           postinc1	equ	0xFE6
    80                           postdec1	equ	0xFE5
    81                           preinc1	equ	0xFE4
    82                           plusw1	equ	0xFE3
    83                           fsr1h	equ	0xFE2
    84                           fsr1l	equ	0xFE1
    85                           bsr	equ	0xFE0
    86                           indf2	equ	0xFDF
    87                           postinc2	equ	0xFDE
    88                           postdec2	equ	0xFDD
    89                           preinc2	equ	0xFDC
    90                           plusw2	equ	0xFDB
    91                           fsr2h	equ	0xFDA
    92                           fsr2l	equ	0xFD9
    93                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                               Thu Oct 19 08:56:25 2023

                        LATA 0F89                          LATB 0F8A                          WREG 0FE8  
                       PRODH 0FF4                         PRODL 0FF3                         Check 060A  
                       false 0628                       isa$std 0001                    _is_square 0602  
                   isa$xinst 0000  
